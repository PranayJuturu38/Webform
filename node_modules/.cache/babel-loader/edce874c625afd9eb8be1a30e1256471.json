{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Documents\\\\AssignmentRepo\\\\src\\\\Webform.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Input, Select, InputNumber, Checkbox, Button, Layout, Space, message, Alert } from \"antd\";\nconst {\n  Option\n} = Select;\nconst {\n  Content,\n  Footer\n} = Layout;\n\nconst Webform = () => {\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const [ConformationText, setConformationText] = useState(false);\n  const [visibleSphere, setvisibleSphere] = useState(true);\n  const [visibleCube, setvisibleCube] = useState(true);\n  const [visibleCone, setvisibleCone] = useState(true);\n  const [visibleCuboid, setvisibleCuboid] = useState(true);\n  const [visibleShape, setvisibleShape] = useState('empty');\n  const [shapes, setshapes] = useState({});\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    setComponentSize(size);\n  };\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    setConformationText(true);\n    Object.keys(values).forEach((key, index) => {\n      console.log(key[index]);\n    }); //setshapes\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const dropdownHandler = value => {\n    console.log(value);\n    console.log(visibleCube); //  switch(value)\n    //  {\n    //    case 'sphere':setvisibleSphere(false);\n    //                   break;\n    //    case 'cube': setvisibleCube(false);\n    //                   console.log(visibleCube);\n    //                   break;\n    //    case 'cuboid':setvisibleCuboid('false');\n    //                  break;\n    //    case 'cone' : setvisibleCone('false');\n    //                  break;\n    //    default : console.log('wrong choice');\n    //  }\n\n    setvisibleShape(value);\n  };\n\n  console.log(visibleCube); //   useEffect(() => {\n  //     console.log('heo')\n  //     setFormfigures( \n  //        <Form style={{ContentAlign:\"left\"}}\n  //     labelCol={{\n  //       span: 14\n  //     }}\n  //     wrapperCol={{\n  //       span: 14\n  //     }}\n  //      initialValues={{\n  //        size: componentSize\n  //      }}\n  //     onValuesChange={onFormLayoutChange}\n  //      size={componentSize}\n  //      onFinish={onFinish}\n  //      onFinishFailed={onFinishFailed}\n  //   >\n  //     <Form.Item label=\"Name of the Object \" name=\"Name of the Object\" rules={[\n  //       {\n  //         required:true,\n  //         message:'Please input the name!',\n  //       }\n  //     ]}>\n  //       <Input />\n  //     </Form.Item>\n  //     <Form.Item label=\"Shape\" name=\"Shape\" rules={[\n  //       {\n  //         required: true,\n  //         message: 'Please select the shape!',\n  //       },\n  //     ]}\n  // >\n  //       <Select \n  //        onChange={dropdownHandler}\n  //       >\n  //         <Option id = \"sphere\" value=\"sphere\">Sphere</Option>\n  //         <Option id = \"cube\" value=\"cube\">Cube</Option>\n  //         <Option id = \"cuboid\" value=\"cuboid\">Cuboid</Option>\n  //         <Option id = \"cone\" value=\"cone\">Cone</Option>\n  //       </Select>\n  //     </Form.Item >\n  //     <Form.Item label=\"Enter the  radius\" name=\"Radius\" rules={[\n  //        {\n  //         required: !visibleSphere,\n  //         message: 'Please enter the radius!',\n  //        },\n  //     ]}hidden = {visibleSphere}>\n  //     <InputNumber step={0.1}/>\n  //     </Form.Item>\n  //     <Form.Item label=\"Enter the length of the side\" name=\"side\" rules={[\n  //        {\n  //         required: !visibleCube,\n  //         message: 'Please enter the length of side!',\n  //        },\n  //     ]}hidden = {visibleCube}>\n  //     <InputNumber step={0.1}/>\n  //     </Form.Item>\n  //     <Form.Item label=\"Enter the height \" name=\"height\" rules={[\n  //        {\n  //         required: !visibleCone,\n  //         message: 'Please enter the height!',\n  //        },\n  //     ]}hidden = {visibleCone}>\n  //     <InputNumber step={0.1}/>\n  //     </Form.Item>\n  //     <Form.Item label=\"Enter the radius\" name=\"coneradius\" rules={[\n  //        {\n  //          required: !visibleCone,\n  //          message: 'Please enter the radius',\n  //        },\n  //     ]} hidden = {visibleCone}>\n  //     <InputNumber step={0.1}/>\n  //     </Form.Item>\n  //     <Form.Item label= 'Enter the length of cuboid'  name=\"cuboidlength\" rules={[\n  //       {\n  //         required: !visibleCuboid,\n  //         message: 'Please enter the length of cuboid ',\n  //       },\n  //     ]} hidden = {visibleCuboid}>\n  //       <InputNumber step={0.1}/>\n  //     </Form.Item>\n  //     <Form.Item label=\"Enter the breadth of the cuboid\" name=\"cuboidbreadth\" rules={[\n  //       {\n  //         required: !visibleCuboid,\n  //         message: 'Please enter the breadth of the cuboid',\n  //       },\n  //     ]} hidden = {visibleCuboid}>\n  //       <InputNumber  step={0.1}/>   \n  //     </Form.Item>\n  //     <Form.Item label=\"Enter the height of the cuboid\" name=\"cuboidheight\" rules={[\n  //       {\n  //         required: !visibleCuboid,\n  //         message: 'Please enter the height of cuboid',\n  //       },\n  //     ]} hidden = {visibleCuboid}>\n  //       <InputNumber step={0.1}/>   \n  //     </Form.Item>\n  //     <Form.Item label=\"Colour\" name = \"Colour\"rules={[\n  //       {\n  //         required: true,\n  //         message: 'Please input colour!',\n  //       },\n  //     ]}>\n  //       <Select>\n  //         <Select.Option value =\"red\">Red</Select.Option>\n  //         <Select.Option value =\"green\">Green</Select.Option>\n  //         <Select.Option value =\"yellow\">Yellow</Select.Option>\n  //         <Select.Option value =\"blue\">Blue</Select.Option>\n  //        <Select.Option value = \"orange\">Orange</Select.Option>\n  //       </Select>\n  //     </Form.Item>\n  //     <Form.Item label=\"Position\" name=\"Position\" rules={[\n  //       {\n  //         required: true,\n  //         message: 'Please input position!',\n  //       },\n  //     ]}>\n  //       <InputNumber step={0.1} />\n  //     </Form.Item>\n  //     <Form.Item style={{marginLeft:212}} >\n  //       <Button type = \"primary\" htmlType= \"submit\">Render</Button>\n  //     </Form.Item>\n  //   </Form>)\n  //    console.log(Formfigures,\"Heloe\");\n  //    setRenderForm( ()=>{\n  //      return Formfigures;}\n  //    )\n  //   },[visibleSphere,visibleCube,visibleCuboid,visibleCone])\n  //   console.log(Formfigures,\"Hi\");\n\n  const Sphereform = () => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the  radius\",\n      name: \"Radius\",\n      rules: [{\n        required: visibleShape === 'sphere' ? true : false,\n        message: 'Please enter the radius!'\n      }],\n      hidden: visibleShape === 'sphere' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 3\n      }\n    }));\n  };\n\n  const Coneform = () => {\n    return /*#__PURE__*/React.createElement(Form, {\n      style: {\n        ContentAlign: \"left\"\n      },\n      labelCol: {\n        span: 14\n      },\n      wrapperCol: {\n        span: 14\n      },\n      initialValues: {\n        size: componentSize\n      },\n      onValuesChange: onFormLayoutChange,\n      size: componentSize,\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the height \",\n      name: \"height\",\n      rules: [{\n        required: !visibleCone,\n        message: 'Please enter the height!'\n      }],\n      hidden: visibleCone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the radius\",\n      name: \"coneradius\",\n      rules: [{\n        required: !visibleCone,\n        message: 'Please enter the radius'\n      }],\n      hidden: visibleCone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Colour\",\n      name: \"Colour\",\n      rules: [{\n        required: true,\n        message: 'Please input colour!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }\n    }, \"Red\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    }, \"Green\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    }, \"Yellow\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }, \"Blue\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 8\n      }\n    }, \"Orange\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Position\",\n      name: \"Position\",\n      rules: [{\n        required: true,\n        message: 'Please input position!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        marginLeft: 212\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }\n    }, \"Render\")));\n  };\n\n  const Cubeform = () => {\n    return /*#__PURE__*/React.createElement(Form, {\n      style: {\n        ContentAlign: \"left\"\n      },\n      labelCol: {\n        span: 14\n      },\n      wrapperCol: {\n        span: 14\n      },\n      initialValues: {\n        size: componentSize\n      },\n      onValuesChange: onFormLayoutChange,\n      size: componentSize,\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the length of the side\",\n      name: \"side\",\n      rules: [{\n        required: !visibleCube,\n        message: 'Please enter the length of side!'\n      }],\n      hidden: visibleCube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Colour\",\n      name: \"Colour\",\n      rules: [{\n        required: true,\n        message: 'Please input colour!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }\n    }, \"Red\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }\n    }, \"Green\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }\n    }, \"Yellow\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }\n    }, \"Blue\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 8\n      }\n    }, \"Orange\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Position\",\n      name: \"Position\",\n      rules: [{\n        required: true,\n        message: 'Please input position!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        marginLeft: 212\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, \"Render\")));\n  };\n\n  const Cuboidform = () => {\n    return /*#__PURE__*/React.createElement(Form, {\n      style: {\n        ContentAlign: \"left\"\n      },\n      labelCol: {\n        span: 14\n      },\n      wrapperCol: {\n        span: 14\n      },\n      initialValues: {\n        size: componentSize\n      },\n      onValuesChange: onFormLayoutChange,\n      size: componentSize,\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the length of cuboid\",\n      name: \"cuboidlength\",\n      rules: [{\n        required: !visibleCuboid,\n        message: 'Please enter the length of cuboid '\n      }],\n      hidden: visibleCuboid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the breadth of the cuboid\",\n      name: \"cuboidbreadth\",\n      rules: [{\n        required: !visibleCuboid,\n        message: 'Please enter the breadth of the cuboid'\n      }],\n      hidden: visibleCuboid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the height of the cuboid\",\n      name: \"cuboidheight\",\n      rules: [{\n        required: !visibleCuboid,\n        message: 'Please enter the height of cuboid'\n      }],\n      hidden: visibleCuboid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Colour\",\n      name: \"Colour\",\n      rules: [{\n        required: true,\n        message: 'Please input colour!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }\n    }, \"Red\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }\n    }, \"Green\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }\n    }, \"Yellow\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }\n    }, \"Blue\"), /*#__PURE__*/React.createElement(Select.Option, {\n      value: \"orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 8\n      }\n    }, \"Orange\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Position\",\n      name: \"Position\",\n      rules: [{\n        required: true,\n        message: 'Please input position!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        marginLeft: 212\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 7\n      }\n    }, \"Render\")));\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    className: \"site-layout\",\n    style: {\n      backgroundColor: \"white\",\n      padding: \"30px\",\n      margin: 64,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    style: {\n      ContentAlign: \"left\"\n    },\n    labelCol: {\n      span: 14\n    },\n    wrapperCol: {\n      span: 14\n    },\n    initialValues: {\n      size: componentSize\n    },\n    onValuesChange: onFormLayoutChange,\n    size: componentSize,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name of the Object \",\n    name: \"Name of the Object\",\n    rules: [{\n      required: true,\n      message: 'Please input the name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Shape\",\n    name: \"Shape\",\n    rules: [{\n      required: true,\n      message: 'Please select the shape!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: dropdownHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    id: \"sphere\",\n    value: \"sphere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 9\n    }\n  }, \"Sphere\"), /*#__PURE__*/React.createElement(Option, {\n    id: \"cube\",\n    value: \"cube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 9\n    }\n  }, \"Cube\"), /*#__PURE__*/React.createElement(Option, {\n    id: \"cuboid\",\n    value: \"cuboid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 9\n    }\n  }, \"Cuboid\"), /*#__PURE__*/React.createElement(Option, {\n    id: \"cone\",\n    value: \"cone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }\n  }, \"Cone\"))), visibleShape === 'sphere' ? /*#__PURE__*/React.createElement(Sphereform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 37\n    }\n  }) : '', visibleShape === 'cube' ? /*#__PURE__*/React.createElement(Cubeform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 31\n    }\n  }) : '', visibleShape === 'cone' ? /*#__PURE__*/React.createElement(Coneform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 31\n    }\n  }) : '', visibleShape === 'cuboid' ? /*#__PURE__*/React.createElement(Cuboidform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 34\n    }\n  }) : '', /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Colour\",\n    name: \"Colour\",\n    rules: [{\n      required: true,\n      message: 'Please input colour!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }\n  }, \"Red\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }\n  }, \"Green\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }\n  }, \"Yellow\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }\n  }, \"Blue\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 6\n    }\n  }, \"Orange\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Position\",\n    name: \"Position\",\n    rules: [{\n      required: true,\n      message: 'Please input position!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    step: 0.1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginLeft: 212\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 5\n    }\n  }, \"Render\")))), ConformationText ? /*#__PURE__*/React.createElement(Alert, {\n    message: \"Success Text\",\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 26\n    }\n  }) : null));\n};\n\nexport default Webform;","map":{"version":3,"sources":["C:/Users/Dev/Documents/AssignmentRepo/src/Webform.js"],"names":["React","useState","useEffect","ReactDOM","Form","Input","Select","InputNumber","Checkbox","Button","Layout","Space","message","Alert","Option","Content","Footer","Webform","componentSize","setComponentSize","ConformationText","setConformationText","visibleSphere","setvisibleSphere","visibleCube","setvisibleCube","visibleCone","setvisibleCone","visibleCuboid","setvisibleCuboid","visibleShape","setvisibleShape","shapes","setshapes","onFormLayoutChange","size","onFinish","values","console","log","Object","keys","forEach","key","index","onFinishFailed","errorInfo","dropdownHandler","value","Sphereform","required","Coneform","ContentAlign","span","marginLeft","Cubeform","Cuboidform","backgroundColor","padding","margin","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAO,aAAP;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,KARF,EASEC,OATF,EAUEC,KAVF,QAWO,MAXP;AAYA,MAAM;AAAEC,EAAAA;AAAF,IAAaR,MAAnB;AAGA,MAAM;AAAES,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAsBN,MAA5B;;AACA,MAAMO,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,SAAD,CAAlD;AACA,QAAM,CAACmB,gBAAD,EAAmBC,mBAAnB,IAA0CpB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC2B,aAAD,EAAgBC,gBAAhB,IAAoC5B,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,OAAD,CAAhD;AAEA,QAAM,CAAC+B,MAAD,EAAQC,SAAR,IAAqBhC,QAAQ,CAAC,EAAD,CAAnC;;AAGA,QAAMiC,kBAAkB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACvChB,IAAAA,gBAAgB,CAACgB,IAAD,CAAhB;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACAhB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACDmB,IAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,OAApB,CAA4B,CAACC,GAAD,EAAKC,KAAL,KAAe;AAACN,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,KAAD,CAAf;AAAwB,KAApE,EAH0B,CAIzB;AAED,GAND;;AAQA,QAAMC,cAAc,GAAGC,SAAS,IAAI;AAClCR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,SAAvB;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAE/BV,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ,EAH+B,CAK/B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACFO,IAAAA,eAAe,CAACiB,KAAD,CAAf;AAEE,GAtBF;;AAuBCV,EAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ,EAlDmB,CAuDtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEE,QAAMyB,UAAU,GAAG,MAAM;AACvB,wBAEF,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,mBAAjB;AAAqC,MAAA,IAA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","sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  InputNumber,\r\n  Checkbox,\r\n  Button,\r\n  Layout,\r\n  Space,\r\n  message,\r\n  Alert\r\n} from \"antd\";\r\nconst { Option } = Select;\r\n\r\n\r\nconst { Content, Footer } = Layout;\r\nconst Webform = () => {\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const [ConformationText, setConformationText] = useState(false );\r\n  const [visibleSphere, setvisibleSphere] = useState(true);\r\n  const [visibleCube, setvisibleCube] = useState(true);\r\n  const [visibleCone, setvisibleCone] = useState(true);\r\n  const [visibleCuboid, setvisibleCuboid] = useState(true);\r\n \r\n  const [visibleShape, setvisibleShape] = useState('empty');\r\n\r\n  const [shapes,setshapes] = useState({ \r\n  });\r\n\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    setConformationText(true);\r\n   Object.keys(values).forEach((key,index) => {console.log(key[index])});\r\n    //setshapes\r\n\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const dropdownHandler = value => {\r\n     \r\n    console.log(value);\r\n    console.log(visibleCube);\r\n    \r\n    //  switch(value)\r\n    //  {\r\n    //    case 'sphere':setvisibleSphere(false);\r\n    //                   break;\r\n    //    case 'cube': setvisibleCube(false);\r\n    //                   console.log(visibleCube);\r\n    \r\n    //                   break;\r\n    //    case 'cuboid':setvisibleCuboid('false');\r\n    //                  break;\r\n    //    case 'cone' : setvisibleCone('false');\r\n    //                  break;\r\n    //    default : console.log('wrong choice');\r\n                                     \r\n    //  }\r\n  setvisibleShape(value);\r\n     \r\n   };\r\n   console.log(visibleCube);\r\n\r\n  \r\n \r\n\r\n//   useEffect(() => {\r\n//     console.log('heo')\r\n//     setFormfigures( \r\n//        <Form style={{ContentAlign:\"left\"}}\r\n//     labelCol={{\r\n//       span: 14\r\n//     }}\r\n//     wrapperCol={{\r\n//       span: 14\r\n//     }}\r\n  \r\n//      initialValues={{\r\n//        size: componentSize\r\n//      }}\r\n\r\n//     onValuesChange={onFormLayoutChange}\r\n//      size={componentSize}\r\n    \r\n//      onFinish={onFinish}\r\n//      onFinishFailed={onFinishFailed}\r\n\r\n//   >\r\n   \r\n//     <Form.Item label=\"Name of the Object \" name=\"Name of the Object\" rules={[\r\n\r\n//       {\r\n//         required:true,\r\n//         message:'Please input the name!',\r\n//       }\r\n//     ]}>\r\n//       <Input />\r\n//     </Form.Item>\r\n    \r\n//     <Form.Item label=\"Shape\" name=\"Shape\" rules={[\r\n//       {\r\n//         required: true,\r\n//         message: 'Please select the shape!',\r\n//       },\r\n//     ]}\r\n// >\r\n\r\n//       <Select \r\n       \r\n//        onChange={dropdownHandler}\r\n//       >\r\n        \r\n//         <Option id = \"sphere\" value=\"sphere\">Sphere</Option>\r\n//         <Option id = \"cube\" value=\"cube\">Cube</Option>\r\n//         <Option id = \"cuboid\" value=\"cuboid\">Cuboid</Option>\r\n//         <Option id = \"cone\" value=\"cone\">Cone</Option>\r\n        \r\n//       </Select>\r\n//     </Form.Item >\r\n    \r\n//     <Form.Item label=\"Enter the  radius\" name=\"Radius\" rules={[\r\n//        {\r\n//         required: !visibleSphere,\r\n//         message: 'Please enter the radius!',\r\n//        },\r\n\r\n//     ]}hidden = {visibleSphere}>\r\n//     <InputNumber step={0.1}/>\r\n//     </Form.Item>\r\n\r\n//     <Form.Item label=\"Enter the length of the side\" name=\"side\" rules={[\r\n//        {\r\n//         required: !visibleCube,\r\n//         message: 'Please enter the length of side!',\r\n//        },\r\n\r\n//     ]}hidden = {visibleCube}>\r\n//     <InputNumber step={0.1}/>\r\n//     </Form.Item>\r\n    \r\n//     <Form.Item label=\"Enter the height \" name=\"height\" rules={[\r\n//        {\r\n//         required: !visibleCone,\r\n//         message: 'Please enter the height!',\r\n//        },\r\n\r\n//     ]}hidden = {visibleCone}>\r\n//     <InputNumber step={0.1}/>\r\n//     </Form.Item>\r\n\r\n//     <Form.Item label=\"Enter the radius\" name=\"coneradius\" rules={[\r\n//        {\r\n//          required: !visibleCone,\r\n//          message: 'Please enter the radius',\r\n//        },\r\n\r\n//     ]} hidden = {visibleCone}>\r\n//     <InputNumber step={0.1}/>\r\n//     </Form.Item>\r\n    \r\n\r\n    \r\n\r\n//     <Form.Item label= 'Enter the length of cuboid'  name=\"cuboidlength\" rules={[\r\n//       {\r\n//         required: !visibleCuboid,\r\n//         message: 'Please enter the length of cuboid ',\r\n//       },\r\n//     ]} hidden = {visibleCuboid}>\r\n//       <InputNumber step={0.1}/>\r\n//     </Form.Item>\r\n    \r\n//     <Form.Item label=\"Enter the breadth of the cuboid\" name=\"cuboidbreadth\" rules={[\r\n//       {\r\n//         required: !visibleCuboid,\r\n//         message: 'Please enter the breadth of the cuboid',\r\n//       },\r\n//     ]} hidden = {visibleCuboid}>\r\n//       <InputNumber  step={0.1}/>   \r\n//     </Form.Item>\r\n    \r\n//     <Form.Item label=\"Enter the height of the cuboid\" name=\"cuboidheight\" rules={[\r\n//       {\r\n//         required: !visibleCuboid,\r\n//         message: 'Please enter the height of cuboid',\r\n//       },\r\n//     ]} hidden = {visibleCuboid}>\r\n//       <InputNumber step={0.1}/>   \r\n//     </Form.Item>\r\n    \r\n//     <Form.Item label=\"Colour\" name = \"Colour\"rules={[\r\n//       {\r\n//         required: true,\r\n//         message: 'Please input colour!',\r\n//       },\r\n//     ]}>\r\n//       <Select>\r\n//         <Select.Option value =\"red\">Red</Select.Option>\r\n//         <Select.Option value =\"green\">Green</Select.Option>\r\n//         <Select.Option value =\"yellow\">Yellow</Select.Option>\r\n//         <Select.Option value =\"blue\">Blue</Select.Option>\r\n//        <Select.Option value = \"orange\">Orange</Select.Option>\r\n//       </Select>\r\n//     </Form.Item>\r\n    \r\n//     <Form.Item label=\"Position\" name=\"Position\" rules={[\r\n//       {\r\n//         required: true,\r\n//         message: 'Please input position!',\r\n//       },\r\n//     ]}>\r\n//       <InputNumber step={0.1} />\r\n//     </Form.Item>\r\n   \r\n \r\n   \r\n//     <Form.Item style={{marginLeft:212}} >\r\n//       <Button type = \"primary\" htmlType= \"submit\">Render</Button>\r\n//     </Form.Item>\r\n\r\n    \r\n//   </Form>)\r\n//    console.log(Formfigures,\"Heloe\");\r\n//    setRenderForm( ()=>{\r\n//      return Formfigures;}\r\n//    )\r\n//   },[visibleSphere,visibleCube,visibleCuboid,visibleCone])\r\n  \r\n//   console.log(Formfigures,\"Hi\");\r\n\r\n  const Sphereform = () => {\r\n    return(\r\n  \r\n  <Form.Item label=\"Enter the  radius\" name=\"Radius\" rules={[\r\n     {\r\n      required: visibleShape === 'sphere'? true : false,\r\n      message: 'Please enter the radius!',\r\n     },\r\n\r\n  ]}hidden = {visibleShape === 'sphere'? false : true}>\r\n  <InputNumber step={0.1}/>\r\n  </Form.Item>\r\n\r\n    );\r\n};\r\nconst Coneform = () => {\r\n  return (\r\n  <Form style={{ContentAlign:\"left\"}}\r\n    labelCol={{\r\n      span: 14\r\n    }}\r\n    wrapperCol={{\r\n      span: 14\r\n    }}\r\n  \r\n     initialValues={{\r\n       size: componentSize\r\n     }}\r\n\r\n    onValuesChange={onFormLayoutChange}\r\n     size={componentSize}\r\n    \r\n     onFinish={onFinish}\r\n     onFinishFailed={onFinishFailed}\r\n\r\n  >\r\n   \r\n    \r\n    <Form.Item label=\"Enter the height \" name=\"height\" rules={[\r\n       {\r\n        required: !visibleCone,\r\n        message: 'Please enter the height!',\r\n       },\r\n\r\n    ]}hidden = {visibleCone}>\r\n    <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Enter the radius\" name=\"coneradius\" rules={[\r\n       {\r\n         required: !visibleCone,\r\n         message: 'Please enter the radius',\r\n       },\r\n\r\n    ]} hidden = {visibleCone}>\r\n    <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n    \r\n\r\n    \r\n    \r\n    <Form.Item label=\"Colour\" name = \"Colour\"rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please input colour!',\r\n      },\r\n    ]}>\r\n      <Select>\r\n        <Select.Option value =\"red\">Red</Select.Option>\r\n        <Select.Option value =\"green\">Green</Select.Option>\r\n        <Select.Option value =\"yellow\">Yellow</Select.Option>\r\n        <Select.Option value =\"blue\">Blue</Select.Option>\r\n       <Select.Option value = \"orange\">Orange</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Position\" name=\"Position\" rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please input position!',\r\n      },\r\n    ]}>\r\n      <InputNumber step={0.1} />\r\n    </Form.Item>\r\n   \r\n \r\n   \r\n    <Form.Item style={{marginLeft:212}} >\r\n      <Button type = \"primary\" htmlType= \"submit\">Render</Button>\r\n    </Form.Item>\r\n\r\n    \r\n  </Form>\r\n  );\r\n};\r\nconst Cubeform = () => {\r\nreturn (\r\n<Form style={{ContentAlign:\"left\"}}\r\n    labelCol={{\r\n      span: 14\r\n    }}\r\n    wrapperCol={{\r\n      span: 14\r\n    }}\r\n  \r\n     initialValues={{\r\n       size: componentSize\r\n     }}\r\n\r\n    onValuesChange={onFormLayoutChange}\r\n     size={componentSize}\r\n    \r\n     onFinish={onFinish}\r\n     onFinishFailed={onFinishFailed}\r\n\r\n  >\r\n   \r\n    \r\n    <Form.Item label=\"Enter the length of the side\" name=\"side\" rules={[\r\n       {\r\n        required: !visibleCube,\r\n        message: 'Please enter the length of side!',\r\n       },\r\n\r\n    ]}hidden = {visibleCube}>\r\n    <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n    \r\n    \r\n    <Form.Item label=\"Colour\" name = \"Colour\"rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please input colour!',\r\n      },\r\n    ]}>\r\n      <Select>\r\n        <Select.Option value =\"red\">Red</Select.Option>\r\n        <Select.Option value =\"green\">Green</Select.Option>\r\n        <Select.Option value =\"yellow\">Yellow</Select.Option>\r\n        <Select.Option value =\"blue\">Blue</Select.Option>\r\n       <Select.Option value = \"orange\">Orange</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Position\" name=\"Position\" rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please input position!',\r\n      },\r\n    ]}>\r\n      <InputNumber step={0.1} />\r\n    </Form.Item>\r\n   \r\n \r\n   \r\n    <Form.Item style={{marginLeft:212}} >\r\n      <Button type = \"primary\" htmlType= \"submit\">Render</Button>\r\n    </Form.Item>\r\n\r\n    \r\n  </Form>\r\n  );\r\n};\r\nconst Cuboidform = () =>{\r\nreturn(\r\n<Form style={{ContentAlign:\"left\"}}\r\n    labelCol={{\r\n      span: 14\r\n    }}\r\n    wrapperCol={{\r\n      span: 14\r\n    }}\r\n  \r\n     initialValues={{\r\n       size: componentSize\r\n     }}\r\n\r\n    onValuesChange={onFormLayoutChange}\r\n     size={componentSize}\r\n    \r\n     onFinish={onFinish}\r\n     onFinishFailed={onFinishFailed}\r\n\r\n  >\r\n   \r\n\r\n    <Form.Item label= 'Enter the length of cuboid'  name=\"cuboidlength\" rules={[\r\n      {\r\n        required: !visibleCuboid,\r\n        message: 'Please enter the length of cuboid ',\r\n      },\r\n    ]} hidden = {visibleCuboid}>\r\n      <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Enter the breadth of the cuboid\" name=\"cuboidbreadth\" rules={[\r\n      {\r\n        required: !visibleCuboid,\r\n        message: 'Please enter the breadth of the cuboid',\r\n      },\r\n    ]} hidden = {visibleCuboid}>\r\n      <InputNumber  step={0.1}/>   \r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Enter the height of the cuboid\" name=\"cuboidheight\" rules={[\r\n      {\r\n        required: !visibleCuboid,\r\n        message: 'Please enter the height of cuboid',\r\n      },\r\n    ]} hidden = {visibleCuboid}>\r\n      <InputNumber step={0.1}/>   \r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Colour\" name = \"Colour\"rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please input colour!',\r\n      },\r\n    ]}>\r\n      <Select>\r\n        <Select.Option value =\"red\">Red</Select.Option>\r\n        <Select.Option value =\"green\">Green</Select.Option>\r\n        <Select.Option value =\"yellow\">Yellow</Select.Option>\r\n        <Select.Option value =\"blue\">Blue</Select.Option>\r\n       <Select.Option value = \"orange\">Orange</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Position\" name=\"Position\" rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please input position!',\r\n      },\r\n    ]}>\r\n      <InputNumber step={0.1} />\r\n    </Form.Item>\r\n   \r\n \r\n   \r\n    <Form.Item style={{marginLeft:212}} >\r\n      <Button type = \"primary\" htmlType= \"submit\">Render</Button>\r\n    </Form.Item>\r\n\r\n    \r\n  </Form>\r\n  );\r\n};\r\n  return (\r\n   <Layout style ={{backgroundColor:\"black\"}}>\r\n    <Content \r\n      className=\"site-layout\"\r\n      style={{backgroundColor:\"white\",padding: \"30px\", margin: 64,textAlign:\"center\" }}\r\n    >\r\n      \r\n      <Space align=\"center\">\r\n       \r\n      <Form style={{ContentAlign:\"left\"}}\r\n          labelCol={{\r\n      span: 14\r\n    }}\r\n    wrapperCol={{\r\n      span: 14\r\n    }}\r\n  \r\n     initialValues={{\r\n       size: componentSize\r\n     }}\r\n\r\n    onValuesChange={onFormLayoutChange}\r\n     size={componentSize}\r\n    \r\n     onFinish={onFinish}\r\n     onFinishFailed={onFinishFailed}\r\n\r\n  >\r\n   \r\n    <Form.Item label=\"Name of the Object \" name=\"Name of the Object\" rules={[\r\n\r\n      {\r\n        required:true,\r\n        message:'Please input the name!',\r\n      }\r\n    ]}>\r\n      <Input />\r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Shape\" name=\"Shape\" rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please select the shape!',\r\n      },\r\n    ]}\r\n>\r\n\r\n      <Select \r\n       \r\n       onChange={dropdownHandler}\r\n      >\r\n        \r\n        <Option id = \"sphere\" value=\"sphere\">Sphere</Option>\r\n        <Option id = \"cube\" value=\"cube\">Cube</Option>\r\n        <Option id = \"cuboid\" value=\"cuboid\">Cuboid</Option>\r\n        <Option id = \"cone\" value=\"cone\">Cone</Option>\r\n        \r\n        </Select>\r\n        </Form.Item >\r\n        {visibleShape === 'sphere'? <Sphereform/> : ''}\r\n    {visibleShape === 'cube'? <Cubeform/> : ''}\r\n    {visibleShape === 'cone'? <Coneform/> : ''}\r\n     {visibleShape === 'cuboid'? <Cuboidform/> : ''}\r\n  <Form.Item label=\"Colour\" name = \"Colour\"rules={[\r\n    {\r\n      required: true,\r\n      message: 'Please input colour!',\r\n    },\r\n  ]}>\r\n    <Select>\r\n      <Select.Option value =\"red\">Red</Select.Option>\r\n      <Select.Option value =\"green\">Green</Select.Option>\r\n      <Select.Option value =\"yellow\">Yellow</Select.Option>\r\n      <Select.Option value =\"blue\">Blue</Select.Option>\r\n     <Select.Option value = \"orange\">Orange</Select.Option>\r\n    </Select>\r\n  </Form.Item>\r\n  \r\n  <Form.Item label=\"Position\" name=\"Position\" rules={[\r\n    {\r\n      required: true,\r\n      message: 'Please input position!',\r\n    },\r\n  ]}>\r\n    <InputNumber step={0.1} />\r\n  </Form.Item>\r\n \r\n\r\n \r\n  <Form.Item style={{marginLeft:212}} >\r\n    <Button type = \"primary\" htmlType= \"submit\">Render</Button>\r\n  </Form.Item>\r\n          \r\n          \r\n         </Form>\r\n       \r\n     \r\n\r\n </Space>\r\n     {ConformationText ? <Alert message=\"Success Text\" type=\"success\" />:null}\r\n    </Content>\r\n  </Layout>\r\n           \r\n  );\r\n \r\n};\r\nexport default Webform;\r\n\r\n"]},"metadata":{},"sourceType":"module"}