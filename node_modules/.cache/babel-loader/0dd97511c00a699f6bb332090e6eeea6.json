{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Documents\\\\react\\\\my-app\\\\src\\\\Figures.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\"; //import { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\n\nimport OrbitControls from \"three-orbitcontrols\";\nimport e1 from \"C:/Users/Dev/Documents/react/my-app/src/textures/2_no_clouds_4k.jpg\";\nimport e2 from \"C:/Users/Dev/Documents/react/my-app/src/textures/elev_bump_4k.jpg\";\nimport e3 from \"C:/Users/Dev/Documents/react/my-app/src/textures/water_4k.png\";\n\nclass Figures extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.start = () => {\n      if (!this.frameId) {\n        this.frameId = requestAnimationFrame(this.animate);\n      }\n    };\n\n    this.stop = () => {\n      cancelAnimationFrame(this.frameId);\n    };\n\n    this.animate = () => {\n      if (this.cube) this.cube.rotation.y += 0.01;\n      this.renderScene();\n      this.frameId = window.requestAnimationFrame(this.animate);\n    };\n\n    this.renderScene = () => {\n      if (this.renderer) this.renderer.render(this.scene1, this.camera1);\n    };\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    this.scene1 = new THREE.Scene();\n    this.scene2 = new THREE.Scene(); //Add Renderer\n\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    this.renderer.setClearColor(\"#000000\");\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement); //add Camera\n\n    this.camera1 = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera1.position.z = 20;\n    this.camera1.position.y = 5; //Camera Controls\n\n    const controls = new OrbitControls(this.camera1, this.renderer.domElement); //LIGHTS\n\n    this.scene1.add(new THREE.AmbientLight(0x333333));\n    var light = new THREE.PointLight(0xFFFFFF, 1);\n    light.position.set(10, 10, 10);\n    this.scene1.add(light);\n    var light = new THREE.DirectionalLight(0xFFFFFF, 1);\n    this.scene1.add(light); // var lights = [];\n    // lights[0] = new THREE.PointLight(0x304ffe, 1, 0);\n    // lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    // lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n    // lights[0].position.set(10, 10, 10);\n    // lights[1].position.set(100, 200, 100);\n    // lights[2].position.set(-100, -200, -100);\n    // this.scene1.add(lights[0]);\n    // this.scene1.add(lights[1]);\n    // this.scene1.add(lights[2]);\n    // this.scene2.add(lights[0]);\n    // this.scene2.add(lights[1]);\n    // this.scene2.add(lights[2]);\n    //Simple Box with WireFrame\n\n    this.addModels();\n    this.renderScene(); //start animation\n\n    this.start();\n  }\n\n  addModels() {\n    // -----Step 1--------\n    // earth =  new THREE.Mesh(\n    //   new THREE.SphereGeometry(1, 35, 35),\n    //   new THREE.MeshPhongMaterial({\n    //     map: THREE.ImageUtils.loadTexture('textures/2_no_clouds_4k.jpg'),\n    //     bumpMap: THREE.ImageUtils.loadTexture('textures/elev_bump_4k.jpg'),\n    //     bumpScale:   0.005,\n    //     specularMap: THREE.ImageUtils.loadTexture('textures/water_4k.png'),\n    //     specular: new THREE.Color('grey') })\n    // );\n    var geometry = new THREE.SphereGeometry(10, 35, 35);\n    var material = new THREE.MeshPhongMaterial();\n    this.cube = new THREE.Mesh(geometry, material);\n    this.scene1.add(this.cube);\n    this.cube.position.set = (0, 0, 0);\n    const textureLoader = new THREE.TextureLoader();\n    this.cube.material.map = textureLoader.load(e1);\n    this.cube.material.bumpmap = textureLoader.load(e2);\n    this.cube.material.bumpScale = 0.05;\n    this.cube.specularMap = textureLoader.load(e3);\n    this.cube.specular = new THREE.Color('grey'); //  geometry = new THREE.BoxGeometry(5, 5, 5);\n    //  material = new THREE.MeshBasicMaterial({\n    //   color: \"#0F0\"\n    // });\n    // this.cube2 = new THREE.Mesh(geometry, material);\n    // this.scene1.add(this.cube2);\n    // this.cube2.position.set = (80,30,50);\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"1000px\",\n        height: \"700px\"\n      },\n      ref: mount => {\n        this.mount = mount;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Figures;","map":{"version":3,"sources":["C:/Users/Dev/Documents/react/my-app/src/Figures.js"],"names":["React","Component","THREE","OrbitControls","e1","e2","e3","Figures","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","cube","rotation","y","renderScene","window","renderer","render","scene1","camera1","componentDidMount","width","mount","clientWidth","height","clientHeight","Scene","scene2","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","PerspectiveCamera","position","z","controls","add","AmbientLight","light","PointLight","set","DirectionalLight","addModels","geometry","SphereGeometry","material","MeshPhongMaterial","Mesh","textureLoader","TextureLoader","map","load","bumpmap","bumpScale","specularMap","specular","Color","componentWillUnmount","removeChild"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\n//import { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\r\nimport OrbitControls from \"three-orbitcontrols\";\r\nimport e1 from \"C:/Users/Dev/Documents/react/my-app/src/textures/2_no_clouds_4k.jpg\";\r\nimport e2 from \"C:/Users/Dev/Documents/react/my-app/src/textures/elev_bump_4k.jpg\"\r\nimport e3 from \"C:/Users/Dev/Documents/react/my-app/src/textures/water_4k.png\"\r\nclass Figures extends Component {\r\n  componentDidMount() {\r\n    const width = this.mount.clientWidth;\r\n    const height = this.mount.clientHeight;\r\n    this.scene1 = new THREE.Scene();\r\n    this.scene2 = new THREE.Scene();\r\n\r\n    //Add Renderer\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.setClearColor(\"#000000\");\r\n    this.renderer.setSize(width, height);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n\r\n    //add Camera\r\n    this.camera1 = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n    this.camera1.position.z = 20;\r\n    this.camera1.position.y = 5;\r\n\r\n    //Camera Controls\r\n    const controls = new OrbitControls(this.camera1, this.renderer.domElement);\r\n\r\n    //LIGHTS\r\n    this.scene1.add(new THREE.AmbientLight(0x333333));\r\n    var light = new THREE.PointLight(0xFFFFFF,1);\r\n    light.position.set( 10, 10, 10 );\r\n    this.scene1.add( light );\r\n\r\n    var light = new THREE.DirectionalLight(0xFFFFFF,1);\r\n     this.scene1.add(light);\r\n    // var lights = [];\r\n    // lights[0] = new THREE.PointLight(0x304ffe, 1, 0);\r\n    // lights[1] = new THREE.PointLight(0xffffff, 1, 0);\r\n    // lights[2] = new THREE.PointLight(0xffffff, 1, 0);\r\n    // lights[0].position.set(10, 10, 10);\r\n    // lights[1].position.set(100, 200, 100);\r\n    // lights[2].position.set(-100, -200, -100);\r\n    // this.scene1.add(lights[0]);\r\n    // this.scene1.add(lights[1]);\r\n    // this.scene1.add(lights[2]);\r\n\r\n    // this.scene2.add(lights[0]);\r\n    // this.scene2.add(lights[1]);\r\n    // this.scene2.add(lights[2]);\r\n    \r\n    //Simple Box with WireFrame\r\n    this.addModels();\r\n\r\n    this.renderScene();\r\n    //start animation\r\n    this.start();\r\n  }\r\n\r\n  addModels() {\r\n    // -----Step 1--------\r\n    // earth =  new THREE.Mesh(\r\n    //   new THREE.SphereGeometry(1, 35, 35),\r\n    //   new THREE.MeshPhongMaterial({\r\n    //     map: THREE.ImageUtils.loadTexture('textures/2_no_clouds_4k.jpg'),\r\n    //     bumpMap: THREE.ImageUtils.loadTexture('textures/elev_bump_4k.jpg'),\r\n    //     bumpScale:   0.005,\r\n    //     specularMap: THREE.ImageUtils.loadTexture('textures/water_4k.png'),\r\n    //     specular: new THREE.Color('grey') })\r\n    // );\r\n \r\n    var geometry = new THREE.SphereGeometry(10, 35, 35);\r\n    var material = new THREE.MeshPhongMaterial();\r\n    this.cube = new THREE.Mesh(geometry, material);\r\n    this.scene1.add(this.cube);\r\n    this.cube.position.set=(0,0,0);\r\n    const textureLoader = new THREE.TextureLoader();\r\n    this.cube.material.map = textureLoader.load(e1);\r\n    this.cube.material.bumpmap = textureLoader.load(e2);\r\n    this.cube.material.bumpScale = 0.05;\r\n    this.cube.specularMap = textureLoader.load(e3); \r\n    this.cube.specular = new THREE.Color('grey');\r\n    //  geometry = new THREE.BoxGeometry(5, 5, 5);\r\n    //  material = new THREE.MeshBasicMaterial({\r\n    //   color: \"#0F0\"\r\n    // });\r\n    // this.cube2 = new THREE.Mesh(geometry, material);\r\n    // this.scene1.add(this.cube2);\r\n    // this.cube2.position.set = (80,30,50);\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n  start = () => {\r\n    if (!this.frameId) {\r\n      this.frameId = requestAnimationFrame(this.animate);\r\n    }\r\n  };\r\n  stop = () => {\r\n    cancelAnimationFrame(this.frameId);\r\n  };\r\n  animate = () => {\r\n   \r\n    if (this.cube) this.cube.rotation.y += 0.01;\r\n    this.renderScene();\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  };\r\n  renderScene = () => {\r\n    if (this.renderer) this.renderer.render(this.scene1, this.camera1);\r\n  };\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ width: \"1000px\", height: \"700px\" }}\r\n        ref={mount => {\r\n          this.mount = mount;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Figures;\r\n"]},"metadata":{},"sourceType":"module"}