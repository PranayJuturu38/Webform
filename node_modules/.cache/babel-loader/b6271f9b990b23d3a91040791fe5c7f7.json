{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Documents\\\\react\\\\my-app\\\\src\\\\Webform.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Input, Select, InputNumber, Checkbox, Button, Layout, Space, message, Alert } from \"antd\";\nimport { TextureLoader } from \"three\";\nconst {\n  Content,\n  Footer\n} = Layout;\n\nconst Webform = () => {\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const [ConformationText, setConformationText] = useState(false);\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    setComponentSize(size);\n  };\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    setConformationText(true);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    className: \"site-layout\",\n    style: {\n      backgroundColor: \"white\",\n      padding: \"30px\",\n      margin: 64,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    style: {\n      ContentAlign: \"left\"\n    },\n    labelCol: {\n      span: 14\n    },\n    wrapperCol: {\n      span: 14\n    },\n    initialValues: {\n      size: componentSize\n    },\n    onValuesChange: onFormLayoutChange,\n    size: componentSize,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name of the Object \",\n    name: \"Name of the Object\",\n    rules: [{\n      required: true,\n      message: 'Please input the name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Shape\",\n    name: \"Shape\",\n    rules: [{\n      required: true,\n      message: 'Please input the shape!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"sphere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Sphere\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"cube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Cube\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"cuboid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Cuboid\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"cone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Cone\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Dimensions:X\",\n    name: \"Dimension:X\",\n    rules: [{\n      required: true,\n      message: 'Please input dimension x'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Dimensions:Y\",\n    name: \"Dimension:Y\",\n    rules: [{\n      required: true,\n      message: 'Please input dimension y!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Dimensions:Z\",\n    name: \"Dimension:Z\",\n    rules: [{\n      required: true,\n      message: 'Please input dimension z!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Colour\",\n    name: \"Colour\",\n    rules: [{\n      required: true,\n      message: 'Please input colour!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Red\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Green\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Yellow\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Blue\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }\n  }, \"Orange\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Position\",\n    name: \"Position\",\n    rules: [{\n      required: true,\n      message: 'Please input position!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Render Object\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginLeft: 212\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Render\")))), ConformationText ? /*#__PURE__*/React.createElement(Alert, {\n    message: \"Success Text\",\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }) : null));\n};\n\nexport default Webform;","map":{"version":3,"sources":["C:/Users/Dev/Documents/react/my-app/src/Webform.js"],"names":["React","useState","ReactDOM","Form","Input","Select","InputNumber","Checkbox","Button","Layout","Space","message","Alert","TextureLoader","Content","Footer","Webform","componentSize","setComponentSize","ConformationText","setConformationText","onFormLayoutChange","size","onFinish","values","console","log","onFinishFailed","errorInfo","backgroundColor","padding","margin","textAlign","ContentAlign","span","required","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  InputNumber,\r\n  Checkbox,\r\n  Button,\r\n  Layout,\r\n  Space,\r\n  message,\r\n  Alert\r\n} from \"antd\";\r\nimport { TextureLoader } from \"three\";\r\n\r\nconst { Content, Footer } = Layout;\r\nconst Webform = () => {\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const [ConformationText, setConformationText] = useState(false );\r\n  \r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    setConformationText(true);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n   <Layout style ={{backgroundColor:\"black\"}}>\r\n    <Content \r\n      className=\"site-layout\"\r\n      style={{backgroundColor:\"white\",padding: \"30px\", margin: 64,textAlign:\"center\" }}\r\n    >\r\n      \r\n      <Space align=\"center\">\r\n      <Form style={{ContentAlign:\"left\"}}\r\n        labelCol={{\r\n          span: 14\r\n        }}\r\n        wrapperCol={{\r\n          span: 14\r\n        }}\r\n      \r\n         initialValues={{\r\n           size: componentSize\r\n         }}\r\n        onValuesChange={onFormLayoutChange}\r\n         size={componentSize}\r\n        \r\n         onFinish={onFinish}\r\n         onFinishFailed={onFinishFailed}\r\n\r\n      >\r\n       \r\n        <Form.Item label=\"Name of the Object \" name=\"Name of the Object\" rules={[\r\n\r\n          {\r\n            required:true,\r\n            message:'Please input the name!',\r\n          }\r\n        ]}>\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Shape\" name=\"Shape\" rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input the shape!',\r\n          },\r\n        ]}\r\n>\r\n          <Select>\r\n            \r\n            <Select.Option value=\"sphere\">Sphere</Select.Option>\r\n            <Select.Option value=\"cube\">Cube</Select.Option>\r\n            <Select.Option value=\"cuboid\">Cuboid</Select.Option>\r\n            <Select.Option value=\"cone\">Cone</Select.Option>\r\n            \r\n          </Select>\r\n        </Form.Item >\r\n        <Form.Item label=\"Dimensions:X\" name=\"Dimension:X\" rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input dimension x',\r\n          },\r\n        ]}>\r\n          <Input />   \r\n        </Form.Item>\r\n        <Form.Item label=\"Dimensions:Y\" name=\"Dimension:Y\" rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input dimension y!',\r\n          },\r\n        ]}>\r\n          <Input />   \r\n        </Form.Item>\r\n        <Form.Item label=\"Dimensions:Z\" name=\"Dimension:Z\" rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input dimension z!',\r\n          },\r\n        ]}>\r\n          <Input />   \r\n        </Form.Item>\r\n        <Form.Item label=\"Colour\" name = \"Colour\"rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input colour!',\r\n          },\r\n        ]}>\r\n          <Select>\r\n            <Select.Option value =\"red\">Red</Select.Option>\r\n            <Select.Option value =\"green\">Green</Select.Option>\r\n            <Select.Option value =\"yellow\">Yellow</Select.Option>\r\n            <Select.Option value =\"blue\">Blue</Select.Option>\r\n           <Select.Option value = \"orange\">Orange</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Position\" name=\"Position\" rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input position!',\r\n          },\r\n        ]}>\r\n          <Input />\r\n        </Form.Item>\r\n       \r\n       \r\n        <Form.Item label=\"Render Object\" >\r\n          <Checkbox></Checkbox>\r\n        </Form.Item>\r\n       \r\n        <Form.Item style={{marginLeft:212}} >\r\n          <Button type = \"primary\" htmlType= \"submit\">Render</Button>\r\n        </Form.Item>\r\n \r\n        \r\n      </Form>\r\n      </Space>\r\n     {ConformationText? <Alert message=\"Success Text\" type=\"success\" />:null}\r\n    </Content>\r\n  </Layout>\r\n           \r\n  );\r\n};\r\nexport default Webform;\r\n\r\n"]},"metadata":{},"sourceType":"module"}