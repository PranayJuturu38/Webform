{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\Documents\\\\AssignmentRepo\\\\src\\\\Webform.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Input, Select, InputNumber, Checkbox, Button, Layout, Space, message, Alert } from \"antd\";\nconst {\n  Option\n} = Select;\nconst {\n  Content,\n  Footer\n} = Layout;\nconst initialList = ['Learn React', 'Learn Firebase', 'Learn GraphQL'];\n\nconst Webform = () => {\n  const [componentSize, setComponentSize] = useState(\"default\");\n  const [ConformationText, setConformationText] = useState(false);\n  const [visibleShape, setvisibleShape] = useState('empty');\n  const [form] = Form.useForm();\n  const [renderobjects, setrenderobjects] = useState([]);\n  const [value, setValue] = useState('');\n  const [list, setList] = useState(initialList);\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    setComponentSize(size);\n  };\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    setConformationText(true);\n    const renderStore = renderobjects;\n    renderStore.push(Object.entries(values).map(entry => entry));\n    renderStore.forEach((value, index) => {\n      console.log(value, index);\n    });\n    setrenderobjects(renderStore); // if (values) {\n    //   setrenderobjects(renderobjects.concat(values));\n    // }\n    //setValue('');\n    //event.preventDefault();\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const dropdownHandler = value => {\n    setvisibleShape(value);\n  }; //  const onCheck = async () => {\n  //   try {\n  //     const values = await form.validateFields();\n  //     console.log('Success:', values);\n  //   } catch (errorInfo) {\n  //     console.log('Failed:', errorInfo);\n  //   }\n  // };\n  //  useEffect(() => {\n  //   console.log(\"ho\");\n  //   form.validateFields(['render']);\n  // }, [renderobjects]);\n\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    if (value) {\n      setList(list.concat(value));\n    }\n\n    setValue('');\n    event.preventDefault();\n  };\n\n  const Sphereform = () => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the  radius\",\n      name: \"Radius\",\n      rules: [{\n        required: visibleShape === 'sphere' ? true : false,\n        message: 'Please enter the radius!'\n      }],\n      hidden: visibleShape === 'sphere' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 3\n      }\n    }));\n  };\n\n  const Coneheightform = () => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the height \",\n      name: \"height\",\n      rules: [{\n        required: visibleShape === 'cone' ? true : false,\n        message: 'Please enter the height!'\n      }],\n      hidden: visibleShape === 'cone' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  const Coneradiusform = () => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the radius\",\n      name: \"coneradius\",\n      rules: [{\n        required: visibleShape === 'cone' ? true : false,\n        message: 'Please enter the radius'\n      }],\n      hidden: visibleShape === 'cone' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  const Cubeform = () => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the length of the side\",\n      name: \"side\",\n      rules: [{\n        required: visibleShape === 'cube' ? true : false,\n        message: 'Please enter the length of side!'\n      }],\n      hidden: visibleShape === 'cube' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  const CuboidLengthform = () => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the length of cuboid\",\n      name: \"cuboidlength\",\n      rules: [{\n        required: visibleShape === 'cuboid' ? true : false,\n        message: 'Please enter the length of cuboid '\n      }],\n      hidden: visibleShape === 'cuboid' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const CuboidHeightform = () => {\n    return /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Enter the height of the cuboid\",\n      name: \"cuboidheight\",\n      rules: [{\n        required: visibleShape === 'cuboid' ? true : false,\n        message: 'Please enter the height of cuboid'\n      }],\n      hidden: visibleShape === 'cuboid' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      step: 0.1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    className: \"site-layout\",\n    style: {\n      backgroundColor: \"white\",\n      padding: \"30px\",\n      margin: 64,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    style: {\n      ContentAlign: \"left\"\n    },\n    labelCol: {\n      span: 14\n    },\n    wrapperCol: {\n      span: 14\n    },\n    initialValues: {\n      size: componentSize\n    },\n    onValuesChange: onFormLayoutChange,\n    size: componentSize,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name of the Object \",\n    name: \"Name of the Object\",\n    rules: [{\n      required: true,\n      message: 'Please input the name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Shape\",\n    name: \"Shape\",\n    rules: [{\n      required: true,\n      message: 'Please select the shape!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: dropdownHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    id: \"sphere\",\n    value: \"sphere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, \"Sphere\"), /*#__PURE__*/React.createElement(Option, {\n    id: \"cube\",\n    value: \"cube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, \"Cube\"), /*#__PURE__*/React.createElement(Option, {\n    id: \"cuboid\",\n    value: \"cuboid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, \"Cuboid\"), /*#__PURE__*/React.createElement(Option, {\n    id: \"cone\",\n    value: \"cone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, \"Cone\"))), visibleShape === 'sphere' ? /*#__PURE__*/React.createElement(Sphereform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 37\n    }\n  }) : '', visibleShape === 'cube' ? /*#__PURE__*/React.createElement(Cubeform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 35\n    }\n  }) : '', visibleShape === 'cone' ? /*#__PURE__*/React.createElement(Coneheightform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 35\n    }\n  }) : '', visibleShape === 'cone' ? /*#__PURE__*/React.createElement(Coneradiusform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 35\n    }\n  }) : '', visibleShape === 'cuboid' ? /*#__PURE__*/React.createElement(CuboidLengthform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 37\n    }\n  }) : '', visibleShape === 'cuboid' ? /*#__PURE__*/React.createElement(CuboidHeightform, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }) : '', /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Colour\",\n    name: \"Colour\",\n    rules: [{\n      required: true,\n      message: 'Please input colour!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, \"Red\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, \"Green\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, \"Yellow\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, \"Blue\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 6\n    }\n  }, \"Orange\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Position\",\n    name: \"Position\",\n    rules: [{\n      required: true,\n      message: 'Please input position!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    step: 0.1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Checkbox.Group, {\n    label: \"Choose objects to render\",\n    name: \"boxgroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 3\n    }\n  }, renderobjects.map(value => {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }, value[0][1]);\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginLeft: 212\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }\n  }, \"Render\")))), ConformationText ? /*#__PURE__*/React.createElement(Alert, {\n    message: \"Success Text\",\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 26\n    }\n  }) : null));\n  console.log(renderobjects);\n};\n\nexport default Webform;","map":{"version":3,"sources":["C:/Users/Dev/Documents/AssignmentRepo/src/Webform.js"],"names":["React","useState","useEffect","ReactDOM","Form","Input","Select","InputNumber","Checkbox","Button","Layout","Space","message","Alert","Option","Content","Footer","initialList","Webform","componentSize","setComponentSize","ConformationText","setConformationText","visibleShape","setvisibleShape","form","useForm","renderobjects","setrenderobjects","value","setValue","list","setList","onFormLayoutChange","size","onFinish","values","console","log","renderStore","push","Object","entries","map","entry","forEach","index","onFinishFailed","errorInfo","dropdownHandler","handleChange","event","target","handleSubmit","concat","preventDefault","Sphereform","required","Coneheightform","Coneradiusform","Cubeform","CuboidLengthform","CuboidHeightform","backgroundColor","padding","margin","textAlign","ContentAlign","span","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  InputNumber,\r\n  Checkbox,\r\n    Button,\r\n  Layout,\r\n  Space,\r\n  message,\r\n  Alert\r\n} from \"antd\";\r\nconst { Option } = Select;\r\n\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst initialList = [\r\n  'Learn React',\r\n  'Learn Firebase',\r\n  'Learn GraphQL',\r\n];\r\n\r\n\r\n\r\n\r\nconst Webform = () => {\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const [ConformationText, setConformationText] = useState(false );\r\n \r\n \r\n  const [visibleShape, setvisibleShape] = useState('empty');\r\n\r\n  const [form] = Form.useForm();\r\n  \r\n\r\n  const [renderobjects, setrenderobjects] = useState([]);  \r\n  \r\n  const [value, setValue] = useState('');\r\n  const [list, setList] =useState(initialList);\r\n\r\n \r\n\r\n  \r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    setConformationText(true);\r\n   const renderStore = renderobjects; \r\n   renderStore.push(  Object.entries(values).map((entry) => entry));\r\n    renderStore.forEach((value,index) => {console.log(value,index)});\r\n    setrenderobjects(renderStore);\r\n   \r\n    // if (values) {\r\n    //   setrenderobjects(renderobjects.concat(values));\r\n    // }\r\n \r\n    //setValue('');\r\n \r\n    //event.preventDefault();\r\n\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const dropdownHandler = value => {\r\n     \r\n    setvisibleShape(value);\r\n     \r\n   };\r\n   \r\n\r\n\r\n  //  const onCheck = async () => {\r\n  //   try {\r\n  //     const values = await form.validateFields();\r\n  //     console.log('Success:', values);\r\n  //   } catch (errorInfo) {\r\n  //     console.log('Failed:', errorInfo);\r\n  //   }\r\n  // };\r\n\r\n\r\n  //  useEffect(() => {\r\n  //   console.log(\"ho\");\r\n  //   form.validateFields(['render']);\r\n  // }, [renderobjects]);\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n \r\n  const handleSubmit = event => {\r\n    if (value) {\r\n      setList(list.concat(value));\r\n    }\r\n \r\n    setValue('');\r\n \r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n\r\n  const Sphereform = () => {\r\n    return(\r\n  \r\n  <Form.Item label=\"Enter the  radius\" name=\"Radius\" rules={[\r\n     {\r\n      required: visibleShape === 'sphere'? true : false,\r\n      message: 'Please enter the radius!',\r\n     },\r\n\r\n  ]}hidden = {visibleShape === 'sphere'? false : true}>\r\n  <InputNumber step={0.1}/>\r\n  </Form.Item>\r\n\r\n    );\r\n};\r\nconst Coneheightform = () => {\r\n  return (\r\n    <Form.Item label=\"Enter the height \" name=\"height\" rules={[\r\n       {\r\n        required: visibleShape === 'cone'? true : false,\r\n        message: 'Please enter the height!',\r\n       },\r\n\r\n    ]}hidden = {visibleShape === 'cone'? false : true}>\r\n    <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n\r\n    \r\n  );\r\n};\r\nconst Coneradiusform = () =>{\r\nreturn (\r\n     <Form.Item label=\"Enter the radius\" name=\"coneradius\" rules={[\r\n       {\r\n         required:  visibleShape === 'cone'? true : false,\r\n         message: 'Please enter the radius',\r\n       },\r\n\r\n    ]} hidden = {visibleShape === 'cone'? false : true}>\r\n    <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n \r\n)\r\n};\r\nconst Cubeform = () => {\r\nreturn (\r\n\r\n   \r\n    \r\n    <Form.Item label=\"Enter the length of the side\" name=\"side\" rules={[\r\n       {\r\n        required: visibleShape === 'cube'? true : false,\r\n        message: 'Please enter the length of side!',\r\n       },\r\n\r\n    ]}hidden = {visibleShape === 'cube'? false : true}>\r\n    <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n    \r\n  );\r\n};\r\nconst CuboidLengthform = () =>{\r\nreturn(\r\n   \r\n  <Form.Item label= 'Enter the length of cuboid'  name=\"cuboidlength\" rules={[\r\n      {\r\n        required: visibleShape === 'cuboid'? true : false,\r\n        message: 'Please enter the length of cuboid ',\r\n      },\r\n    ]} hidden = {visibleShape === 'cuboid'? false : true}>\r\n      <InputNumber step={0.1}/>\r\n    </Form.Item>\r\n    \r\n  );\r\n};\r\nconst CuboidHeightform = () => {\r\nreturn(\r\n  <Form.Item label=\"Enter the height of the cuboid\" name=\"cuboidheight\" rules={[\r\n    {\r\n      required: visibleShape === 'cuboid'? true : false,\r\n      message: 'Please enter the height of cuboid',\r\n    },\r\n  ]} hidden = {visibleShape === 'cuboid'? false : true}>\r\n    <InputNumber step={0.1}/>   \r\n  </Form.Item>\r\n  \r\n);\r\n};\r\n  return (\r\n   <Layout style ={{backgroundColor:\"black\"}}>\r\n    <Content \r\n      className=\"site-layout\"\r\n      style={{backgroundColor:\"white\",padding: \"30px\", margin: 64,textAlign:\"center\" }}\r\n    >\r\n      \r\n      <Space align=\"center\">\r\n       \r\n      <Form \r\n      form={form}\r\n      \r\n      style={{ContentAlign:\"left\"}}\r\n          labelCol={{\r\n      span: 14\r\n    }}\r\n    wrapperCol={{\r\n      span: 14\r\n    }}\r\n  \r\n     initialValues={{\r\n       size: componentSize\r\n     }}\r\n\r\n    onValuesChange={onFormLayoutChange}\r\n     size={componentSize}\r\n    \r\n     onFinish={onFinish}\r\n     onFinishFailed={onFinishFailed}\r\n\r\n  >\r\n   \r\n    <Form.Item label=\"Name of the Object \" name=\"Name of the Object\" rules={[\r\n\r\n      {\r\n        required:true,\r\n        message:'Please input the name!',\r\n      }\r\n    ]}>\r\n      <Input />\r\n    </Form.Item>\r\n    \r\n    <Form.Item label=\"Shape\" name=\"Shape\" rules={[\r\n      {\r\n        required: true,\r\n        message: 'Please select the shape!',\r\n      },\r\n    ]}\r\n>\r\n\r\n      <Select \r\n       \r\n       onChange={dropdownHandler}\r\n      >\r\n        \r\n        <Option id = \"sphere\" value=\"sphere\">Sphere</Option>\r\n        <Option id = \"cube\" value=\"cube\">Cube</Option>\r\n        <Option id = \"cuboid\" value=\"cuboid\">Cuboid</Option>\r\n        <Option id = \"cone\" value=\"cone\">Cone</Option>\r\n        \r\n        </Select>\r\n        </Form.Item >\r\n        {visibleShape === 'sphere'? <Sphereform/> : ''}\r\n        {visibleShape === 'cube'? <Cubeform/> : ''}\r\n        {visibleShape === 'cone'? <Coneheightform/> : ''}\r\n        {visibleShape === 'cone'? <Coneradiusform/> : ''}\r\n    \r\n        {visibleShape === 'cuboid'? <CuboidLengthform/> : ''}\r\n        {visibleShape === 'cuboid'? <CuboidHeightform/> : ''}\r\n  <Form.Item label=\"Colour\" name = \"Colour\"rules={[\r\n    {\r\n      required: true,\r\n      message: 'Please input colour!',\r\n    },\r\n  ]}>\r\n    <Select>\r\n      <Select.Option value =\"red\">Red</Select.Option>\r\n      <Select.Option value =\"green\">Green</Select.Option>\r\n      <Select.Option value =\"yellow\">Yellow</Select.Option>\r\n      <Select.Option value =\"blue\">Blue</Select.Option>\r\n     <Select.Option value = \"orange\">Orange</Select.Option>\r\n    </Select>\r\n  </Form.Item>\r\n  \r\n  <Form.Item label=\"Position\" name=\"Position\" rules={[\r\n    {\r\n      required: true,\r\n      message: 'Please input position!',\r\n    },\r\n  ]}>\r\n    <InputNumber step={0.1} />\r\n  </Form.Item>\r\n\r\n  <Checkbox.Group label=\"Choose objects to render\" name=\"boxgroup\" >\r\n   \r\n       {renderobjects.map((value) => {return(\r\n             \r\n            <Checkbox >{value[0][1]}</Checkbox>\r\n                              \r\n         )\r\n  })}\r\n   \r\n  </Checkbox.Group>\r\n \r\n  <Form.Item style={{marginLeft:212}} >\r\n    <Button type = \"primary\" htmlType= \"submit\">Render</Button>\r\n  </Form.Item>\r\n          \r\n\r\n          \r\n         </Form>\r\n \r\n         {/* <ul>\r\n         {renderobjects.map(item => (\r\n          <li key='sjag'>abcds</li>\r\n      ))} \r\n       </ul>  */}\r\n     \r\n </Space>\r\n     {ConformationText ? <Alert message=\"Success Text\" type=\"success\" />:null}\r\n    </Content>\r\n  </Layout>\r\n           \r\n  );\r\n  console.log(renderobjects);\r\n \r\n};\r\nexport default Webform;\r\n\r\n"]},"metadata":{},"sourceType":"module"}